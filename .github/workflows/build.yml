name: Build and Test

on:
  push:
    branches:
      - master
      - '*.x'  # Version branches like 2.10.x
  pull_request:
    branches:
      - master
      - '*.x'
  schedule:
    # Nightly build at 8 PM UTC (mirrors Jenkins cron)
    - cron: '0 20 * * *'
  workflow_dispatch:  # Allow manual triggers

env:
  MAVEN_OPTS: '-Xmx8G -Xms1G -XX:+UseG1GC -Djava.security.egd=file:/dev/./urandom'
  MAVEN_CLI_OPTS: '--batch-mode --errors --fail-at-end --show-version -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'
  COVERAGE_EXCLUSIONS: '**/test/**/*,**/itests/**/*,**/*Test*,**/sdk/**/*,**/*.js,**/node_modules/**/*,**/jaxb/**/*,**/wsdl/**/*,**/nces/sws/**/*,**/*.adoc,**/*.txt,**/*.xml'

jobs:
  # Quick validation job for PRs
  validate:
    name: Validate Build (Java ${{ matrix.java-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        # Test on Java LTS versions per SYS-PLT-002
        java-version: ['11', '17', '21']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Need full history for incremental build

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'

      - name: Setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.5'

      - name: Validate POM files
        run: mvn $MAVEN_CLI_OPTS validate

      - name: Check code formatting
        run: mvn $MAVEN_CLI_OPTS com.coveo:fmt-maven-plugin:check

  # Incremental build for pull requests
  incremental-build:
    name: Incremental Build (Java ${{ matrix.java-version }})
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        # Test on Java LTS versions per SYS-PLT-002
        java-version: ['11', '17', '21']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history needed for gitflow-incremental-builder

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'

      - name: Setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.5'

      - name: Install dependencies (no tests)
        run: |
          mvn $MAVEN_CLI_OPTS install \
            -DskipStatic=true \
            -DskipTests=true

      - name: Incremental build with tests
        run: |
          mvn $MAVEN_CLI_OPTS clean install \
            -P !itests \
            -Dgib.enabled=true \
            -Dgib.referenceBranch=refs/remotes/origin/${{ github.base_ref }}

      - name: Build integration tests
        run: |
          mvn $MAVEN_CLI_OPTS install \
            -pl distribution/test/itests \
            -amd \
            -nsu

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-incremental-java-${{ matrix.java-version }}
          path: |
            **/target/surefire-reports/**
            **/target/failsafe-reports/**
          retention-days: 7

  # Full build for main branches
  full-build:
    name: Full Build (Java ${{ matrix.java-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request'

    strategy:
      matrix:
        # Multi-platform and Java version testing matrix per SYS-PLT-001 and SYS-PLT-002
        os: [ubuntu-latest]
        # Future: expand to [ubuntu-latest, windows-latest, macos-latest]
        java-version: ['11', '17', '21']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'maven'

      - name: Setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.5'

      - name: Full build with tests
        run: |
          mvn $MAVEN_CLI_OPTS clean install \
            -P !itests

      - name: Build integration tests
        run: |
          mvn $MAVEN_CLI_OPTS install \
            -pl distribution/test/itests \
            -amd \
            -nsu

      - name: Upload build artifacts
        if: success() && matrix.os == 'ubuntu-latest' && matrix.java-version == '17'
        uses: actions/upload-artifact@v4
        with:
          name: alliance-distribution-java-${{ matrix.java-version }}
          path: distribution/alliance/target/*.zip
          retention-days: 14

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-full-${{ matrix.os }}-java-${{ matrix.java-version }}
          path: |
            **/target/surefire-reports/**
            **/target/failsafe-reports/**
          retention-days: 7

      - name: Upload JaCoCo coverage reports
        if: success() && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports-java-${{ matrix.java-version }}
          path: |
            **/target/site/jacoco/**
          retention-days: 14

  # Deploy artifacts (mirrors Jenkins deploy stage)
  # Note: Deploy only with Java 17 (recommended LTS version)
  deploy:
    name: Deploy Artifacts
    runs-on: ubuntu-latest
    needs: full-build
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/master' || contains(github.ref, '.x')) &&
      github.repository == 'codice/alliance'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 17 (recommended version for deployment)
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: releases  # Value of the distributionManagement/repository/id field in pom.xml
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Setup Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.5'

      - name: Deploy to repository
        run: |
          mvn $MAVEN_CLI_OPTS deploy \
            -DskipStatic=true \
            -DskipTests=true \
            -DretryFailedDeploymentCount=10
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Create GitHub Release (if tagged)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: distribution/alliance/target/*.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Notification job (runs after all builds)
  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [full-build, incremental-build]
    if: always()

    steps:
      - name: Check build status
        run: |
          if [[ "${{ needs.full-build.result }}" == "failure" ]] || [[ "${{ needs.incremental-build.result }}" == "failure" ]]; then
            echo "Build failed!"
            exit 1
          fi

      # Future: Add Slack/Discord/Email notifications here
      - name: Build succeeded
        if: success()
        run: echo "Build completed successfully"
