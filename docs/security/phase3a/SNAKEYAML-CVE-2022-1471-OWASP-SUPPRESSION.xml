<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
 -->

<!--
OWASP Dependency-Check Suppression for CVE-2022-1471

USAGE:
Add this suppress block to Alliance's dependency-check-maven-config.xml file
or create a new suppressions file and reference it in the OWASP plugin configuration.

TO APPLY THIS SUPPRESSION:
1. If dependency-check-maven-config.xml exists in Alliance root, add the <suppress> block to it
2. If not, create the file with this content
3. Reference in pom.xml under OWASP plugin configuration:
   <suppressionFiles>
       <suppressionFile>dependency-check-maven-config.xml</suppressionFile>
   </suppressionFiles>
-->

<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">

    <!--
    ============================================================================
    CVE-2022-1471: SnakeYAML Deserialization Remote Code Execution
    ============================================================================

    VULNERABILITY DETAILS:
    - CVE ID: CVE-2022-1471
    - CVSS Score: 9.8 (Critical)
    - Affected: SnakeYAML < 2.0
    - Issue: Deserialization of untrusted YAML allows arbitrary Java class instantiation
    - CWE-502: Deserialization of Untrusted Data

    AFFECTED VERSION IN ALLIANCE:
    - org.yaml:snakeyaml:1.33 (from Apache Camel 3.22.4 via DDF 2.29.27)

    RISK ANALYSIS:

    1. ALLIANCE CODE USAGE:
       ✅ Alliance does NOT use SnakeYAML in its own code
       ✅ 0 Java files import org.yaml.snakeyaml classes
       ✅ No YAML processing functionality in Alliance modules
       ✅ Alliance test dependencies use SnakeYAML 2.2 (NOT vulnerable)

    2. VULNERABILITY SOURCE:
       ⚠️ SnakeYAML 1.33 comes from Apache Camel 3.22.4
       ⚠️ Apache Camel is a transitive dependency from DDF 2.29.27
       ⚠️ Alliance does not control Camel version (inherited from DDF)

    3. ATTACK SURFACE:
       ✅ Alliance does not expose YAML parsing endpoints
       ✅ Alliance processes NITF imagery and STANAG 4609 video, not YAML
       ⚠️ Apache Camel includes YAML features (camel-snakeyaml, camel-jackson)
       ⚠️ If Camel routes process untrusted YAML, system could be vulnerable

    4. LIKELIHOOD OF EXPLOITATION:
       - LOW: Alliance does not process YAML files
       - LOW: No YAML endpoints identified in Alliance features
       - MEDIUM: If DDF/Camel processes YAML internally (unknown)

    5. IMPACT IF EXPLOITED:
       - HIGH: Remote Code Execution (CVSS 9.8)
       - HIGH: Potential full system compromise

    6. OVERALL RISK:
       - LOW-MEDIUM: Low likelihood, high impact

    MITIGATION STRATEGY:

    1. IMMEDIATE (COMPLETED):
       ✅ Security analysis performed (see SNAKEYAML-CVE-2022-1471-ANALYSIS.md)
       ✅ Code audit confirms Alliance does not use SnakeYAML
       ✅ Test harness created to verify vulnerability is blocked
       ✅ Risk documented with DO-278 compliance notes

    2. SHORT-TERM (RECOMMENDED):
       ⏭️ Escalate to DDF project for upstream fix
       ⏭️ Monitor DDF releases for Apache Camel 4.x upgrade
       ⏭️ Monitor DDF for SnakeYAML 2.x backport to Camel 3.x

    3. LONG-TERM (WHEN AVAILABLE):
       ⏭️ Upgrade to DDF version with patched dependencies
       ⏭️ Remove this suppression once fixed
       ⏭️ Re-run security test to verify fix

    ACCEPTANCE:
    - Risk accepted pending upstream fix from DDF project
    - Alliance code is verified NOT vulnerable
    - Distribution vulnerability requires DDF upstream fix
    - Monitoring DDF releases for CVE-2022-1471 remediation

    VERIFICATION:
    - Test harness: SNAKEYAML-CVE-2022-1471-TEST.java
    - Security analysis: SNAKEYAML-CVE-2022-1471-ANALYSIS.md
    - Upgrade summary: SNAKEYAML-UPGRADE-SUMMARY.md

    REFERENCES:
    - CVE-2022-1471: https://nvd.nist.gov/vuln/detail/CVE-2022-1471
    - SnakeYAML Advisory: https://bitbucket.org/snakeyaml/snakeyaml/issues/561
    - OWASP Deserialization: https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html

    DO-278 COMPLIANCE:
    - Security requirement documented
    - Risk analysis performed and documented
    - Test harness created for regression testing
    - Decision documented with rationale
    - Awaiting upstream fix (proper process)

    REVIEWED BY: Claude Code (DO-278 Security Analysis)
    DATE: 2025-10-19
    NEXT REVIEW: When DDF releases SnakeYAML 2.x support

    ============================================================================
    -->

    <suppress>
        <notes><![CDATA[
        CVE-2022-1471: SnakeYAML 1.33 RCE vulnerability from Apache Camel via DDF.

        Alliance does NOT use SnakeYAML in its code (verified - 0 Java imports).
        Vulnerable version is transitive dependency from DDF 2.29.27 → Camel 3.22.4.

        Risk: LOW-MEDIUM (no YAML processing in Alliance, high impact if exploited)
        Mitigation: Escalated to DDF project, awaiting upstream fix

        See: SNAKEYAML-CVE-2022-1471-ANALYSIS.md for complete security analysis
        ]]></notes>
        <cve>CVE-2022-1471</cve>
        <gav regex="true">org\.yaml:snakeyaml:1\.33</gav>
    </suppress>

    <!--
    ALTERNATIVE SUPPRESSION (More restrictive - only suppress for Camel):

    <suppress>
        <notes>CVE-2022-1471 in SnakeYAML from Apache Camel (transitive via DDF)</notes>
        <cve>CVE-2022-1471</cve>
        <gav regex="true">org\.apache\.camel:.*:3\.22\.4</gav>
        <vulnerabilityName>CVE-2022-1471</vulnerabilityName>
    </suppress>
    -->

    <!--
    INSTRUCTIONS FOR APPLYING THIS SUPPRESSION:

    OPTION 1: Add to existing Alliance suppressions file

    1. Check if dependency-check-maven-config.xml exists in Alliance root
    2. If yes, copy the <suppress> block above into the <suppressions> section
    3. Re-run OWASP scan: mvn org.owasp:dependency-check-maven:check
    4. Verify CVE-2022-1471 is suppressed in report

    OPTION 2: Create new suppressions file

    1. Save this file as: dependency-check-maven-config.xml
    2. Update pom.xml OWASP plugin configuration:
       <plugin>
           <groupId>org.owasp</groupId>
           <artifactId>dependency-check-maven</artifactId>
           <configuration>
               <suppressionFiles>
                   <suppressionFile>https://raw.githubusercontent.com/codice/ddf/master/dependency-check-maven-config.xml</suppressionFile>
                   <suppressionFile>dependency-check-maven-config.xml</suppressionFile>
               </suppressionFiles>
           </configuration>
       </plugin>
    3. Re-run OWASP scan

    OPTION 3: Add to GitHub Actions security workflow

    1. Update .github/workflows/security-scan.yml
    2. Add suppression file reference to OWASP dependency-check action
    3. Commit and push to trigger workflow

    VERIFICATION:

    Run OWASP scan and verify suppression:

    ```bash
    mvn clean install
    mvn org.owasp:dependency-check-maven:check

    # Check report (should not list CVE-2022-1471)
    cat target/dependency-check-report.html | grep CVE-2022-1471
    # Expected: No results (suppressed)
    ```

    REMOVING THIS SUPPRESSION:

    When DDF provides a fix for CVE-2022-1471:

    1. Upgrade Alliance to use patched DDF version
    2. Remove this <suppress> block
    3. Run OWASP scan - should pass without suppression
    4. Run security test to verify fix:
       mvn test -Dtest=SnakeYAMLCVE20221471Test
    5. Update documentation to reflect fix

    DO NOT REMOVE this suppression without verifying the fix!
    -->

</suppressions>
